name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  DOCKER_BUILDKIT: 1

jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v1
      -
        name: Login to DockerHub Registry
        uses: azure/docker-login@v1
        with:
          #login-server: <registry..>
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Set up Docker Buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      -
        name: Run Buildx
        run: |
          docker buildx build \
            --platform linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/s390x \
            --output "type=image,push=true" \
            .
    # - name: 'Checkout git repo'
    #   uses: actions/checkout@v1
    # - run: docker run --rm --privileged multiarch/qemu-user-static:register --reset
    # - uses: docker://multiarch/ubuntu-core:armhf-bionic
    #   with:
    #     args: 'uname -a'
    # - uses: docker://multiarch/ubuntu-core:arm64-bionic
    #   with:
    #     args: 'uname -a'
    # - uses: docker://multiarch/ubuntu-core:arm64-bionic
    #   with:
    #     args: 'ls -lah'
    # docker's build action would be nice - if it were multi-arch, but nope
    # - name: 'Build and push Image'
    #   uses: docker/build-push-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    #     repository: svendowideit/multi-arch
    #     tags: latest
